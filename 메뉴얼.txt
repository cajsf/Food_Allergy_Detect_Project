1. 사전 준비
Python: 3.10 버전 이상
MySQL: 8.0버전 이상
Tesseract-OCR(데이터 수집 코드 실행 시 필요)

2. 파이썬 라이브러리 설치
pymysql
bcrypt
pandas
requests
beautifulsoup4
pytesseract
Pillow

3. 데이터베이스 및 테이블 설정
제출한 데이터베이스.ipynb 주피터 노트북 파일을 실행하여 데이터베이스와 모든 테이블을 생성하고, 기본적인 데이터를 적재합니다.
주피터 노트북 코드를 순서대로 실행하시면 모든 테이블이 생성되고, 데이터들이 적재될 것입니다.

단, 마지막 관리자 계정 설정 코드는 아래의 관리자 계정 설정 과정의 마지막에 실행할 코드입니다.

4. 테스트용 샘플 유저 회원가입
SQL 폴더 안에 있는 사용자 샘플.xlsx 파일을 열면 테스트용 샘플 사용자의 아이디와 이름이 적혀있습니다. 회원가입을 할 때 비밀번호를 해싱하기 때문에 파이썬 코드로 한번에 넣을 수가 없습니다. 귀찮으시겠지만 food_allergy_app 폴더의 main.py 프로그램을 실행해서 '회원가입' 메뉴를 이용해서 직접 회원가입 해주시기 바랍니다.

5. 관리자 계정 설정
위의 4번 과정을 제대로 따라하셨다면 Users 테이블에 'admin' 계정이 추가되어 있을 것입니다. 이제 다시 데이터베이스.ipynb 파일의 마지막 줄에 있는 관리자 계정 설정 코드를 실행하면 'admin' 계정이 관리가 계정으로 변경됩니다.

만약 'admin' 계정이 추가되어있지 않다면 관리자 기능 테스트를 위해, 아래 절차에 따라 관리자 계정을 수동으로 설정해야 합니다.
	1. main.py 프로그램을 실행합니다.
	2. '(6) 회원가입' 메뉴를 통해 관리자로 사용할 계정을 하나 생성합니다. 관리자 계정을 설정하는 코드에 아이디를 'admin'으로 설정해놓았기 때문에 아이디는 'admin'으로 해주시기 바랍니다.(예: 아이디 admin, 비밀번호 admin1234)
	3. 이제 다시 데이터베이스.ipynb 파일의 마지막 줄에 있는 관리자 계정 설정 코드를 실행하면 'admin' 계정이 관리가 계정으로 변경됩니다.

6. 테스트용 샘플 알레르기 정보 추가
데이터베이스.ipynb 파일의 '관리자 계정 설정' 코드의 바로 아래에 '샘플 알레르기 정보 추가' 코드가 있습니다. 이 코드를 실행하면 테스트용 샘플 알레르기 정보가 추가됩니다.

Users 테이블의 user_id는 auto_increment가 적용되어 있습니다. 하지만 만약 샘플 유저 회원가입 과정에서 문제가 생겨서 user_id가 밀렸다면, SQL 폴더에 있는 test_user_allergy_sample.txt 파일을 열어서 values의 앞쪽 숫자를 user_id에 맞게 바꿔줍니다. 그 후에 다시 '샘플 알레르기 정보 추가' 코드를 작동하면 정상적으로 작동될 것입니다.

7. 프로그램 실행
	모든 설정이 완료되면, main.py 프로그램을 시작합니다. 이제 모든 기능을 정상적으로 테스트할 수 있습니다.